{"version":3,"sources":["App.module.css","components/ShoppingList/ShoppingList.module.css","components/ShoppingItem/ShoppingItem.module.css","components/Total/Total.module.css","actions/actionsTypes.js","reducers/purchases.js","reducers/listIsActive.js","reducers/index.js","store/index.js","helpers/comandParser.js","actions/index.js","components/CommandBar/CommandBar.jsx","helpers/parseAndFormatDate.js","components/ShoppingItem/ShoppingItem.jsx","components/ShoppingList/ShoppingList.jsx","components/Total/Total.jsx","App.jsx","index.js"],"names":["module","exports","ADD","TOTAL","CLEAR","LIST","ERROR","initialState","purchases","total","totalIsActive","errors","listIsActive","combineReducers","state","action","command","payload","type","newPurchase","date","purchase","price","currency","title","addPurchase","map","item","includes","addPurchaseAsExisting","addPurchaseAsNew","filter","selectedCurrency","fixerData","permTotalObj","PLN","USD","EUR","sum","rates","key","Math","ceil","store","createStore","reducers","applyMiddleware","ReduxThunk","window","validateForDate","data","Date","parse","test","validateForCurrency","commandParser","split","params","validateForTitle","join","commandHandler","value","length","dispatch","axios","get","then","connect","onSubmit","useState","setValue","submit","e","preventDefault","style","width","FormControl","error","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","target","endAdornment","InputAdornment","position","Button","color","onClick","labelWidth","FormHelperText","parseAndFormatDate","dateData","getFullYear","getMonth","slice","getDate","ShoppingItem","className","classes","index","list","ShoppingList","Total","App","ReactDOM","render","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,MAAQ,uB,sICDbC,EAAM,MACNC,EAAQ,QACRC,EAAQ,QACRC,EAAO,OACPC,EAAQ,QCFfC,EAAe,CACjBC,UAAW,GACXC,MAAO,GACPC,eAAe,EACfC,OAAQ,ICJNJ,EAAe,CACjBK,cAAc,GCCHC,cAAgB,CAC3BL,UFIW,WAAmC,IAAlCM,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACtCP,EAAaM,EAAbN,UACDQ,EAAUD,EAAOE,QAGvB,OAAQF,EAAOG,MAEX,KAAKhB,EACD,IAAMiB,EAAc,CAChBC,KAAMJ,EAAQI,KACdC,SACI,CACIC,MAAON,EAAQM,MACfC,SAAUP,EAAQO,SAClBC,MAAOR,EAAQQ,QAIrBC,EAAc,SAACN,GACjB,OAAIX,EAAUkB,KAAI,SAAAC,GAAI,OAAIA,EAAKP,OAASD,EAAYC,QAAMQ,UAAS,GACxDC,EAAsBV,GAEtBW,EAAiBX,IAI1BU,EAAwB,SAAC,GAAsB,IAArBT,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAClC,OAAOb,EAAUkB,KAAI,SAAAC,GAAI,OACrBA,EAAKP,OAASA,EAAd,2BAAyBO,GAAzB,IAA+BnB,UAAU,GAAD,mBAAMmB,EAAKnB,WAAX,CAAsBa,MAAaM,MAI7EG,EAAmB,SAAC,GAAsB,IAArBV,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAC7B,MAAM,GAAN,mBAAWb,GAAX,CAAsB,CAACY,KAAMA,EAAMZ,UAAW,CAACa,OAEnD,OAAO,2BAAIP,GAAX,IAAkBN,UAAWiB,EAAYN,GAAcR,OAAQ,KAEnE,KAAKP,EACD,OAAO,2BAAIU,GAAX,IAAkBN,UAAWA,EAAUuB,QAAO,SAAAJ,GAAI,OAAIA,EAAKP,OAASJ,EAAQI,QAAOT,OAAQ,KAE/F,KAAKR,EAAL,MAC0CY,EAAOE,QAAtCe,EADX,EACWA,iBAAkBC,EAD7B,EAC6BA,UAEnBC,EAAe,CACjBC,IAAK,EACLC,IAAK,EACLC,IAAK,GAGT7B,EAAUkB,KAAI,qBAAElB,UAAyBkB,KAAI,SAAAL,GAAQ,OAAIa,EAAab,EAASE,YAAcF,EAASC,YAEtG,IAAIgB,EAAM,EACJC,EAAQN,EAAUM,MAExB,IAAK,IAAIC,KAAOD,EACZD,GAAOC,EAAMP,GAAoBO,EAAMC,GAAON,EAAaM,GAG/D,OAAO,2BAAI1B,GAAX,IAAkBL,MAAM,GAAD,OAAKgC,KAAKC,KAAW,IAANJ,GAAa,IAA5B,YAAmCN,GAAoBtB,eAAe,EAAMC,OAAQ,KAE/G,KAAKL,EACD,OAAO,2BAAIQ,GAAX,IAAkBH,OAAO,YAAKI,EAAOE,WACzC,QACI,OAAO,2BAAIH,GAAX,IAAkBJ,eAAe,MElEzCE,aDAW,WAAmC,IAAlCE,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC7C,OAAQA,EAAOG,MACX,KAAKb,EACD,OAAO,2BAAIS,GAAX,IAAkBF,cAAeE,EAAMF,eAC3C,QACI,OAAOE,MEPb6B,EAAQC,YAAYC,EAAUC,YAAgBC,MACpDC,OAAOL,MAAQA,EAEAA,Q,+FCPTM,EAAkB,SAACC,GACrB,IAAKC,KAAKC,MAAMF,GAAO,OAAO,EAE9B,MADe,wBACDG,KAAKH,IAQjBI,EAAsB,SAACJ,GAEzB,MADe,WACDG,KAAKH,IAkERK,EA1DO,SAACvC,GACnB,IAAIL,EAAS,GADkB,EAGHK,EAAQwC,MAAM,KAHX,iBAGxBzC,EAHwB,KAGb0C,EAHa,WAK/B,OAAQ1C,GAEJ,IAAK,MAAQ,IAAD,cACkC0C,GAAnCrC,EADC,KACKE,EADL,KACYC,EADZ,KACyBC,EADzB,WAQR,OALKyB,EAAgB7B,KAAOT,EAAM,sBAAOA,GAAP,CAAe,UAxB1C,YACD0C,KAwBgB/B,KAAQX,EAAM,sBAAOA,GAAP,CAAe,WAC9C2C,EAAoB/B,KAAWZ,EAAM,sBAAOA,GAAP,CAAe,cAjB5C,SAACuC,GAEtB,MADe,eACDG,KAAKH,GAgBNQ,CAAiBlC,EAAMmC,KAAK,QAAOhD,EAAM,sBAAOA,GAAP,CAAe,WAEtD,CACHI,SACAK,KAAM+B,KAAKC,MAAMhC,GACjBE,QACAC,WACAC,MAAOA,EAAMmC,KAAK,KAClBhD,UAGR,IAAK,QAAU,IACJY,EADG,YACSkC,EADT,MAKV,OAFKH,EAAoB/B,KAAWZ,EAAM,sBAAOA,GAAP,CAAe,cAElD,CACHI,SACAQ,WACAZ,UAGR,IAAK,QAAU,IACJS,EADG,YACKqC,EADL,MAKV,OAFKR,EAAgB7B,KAAOT,EAAM,sBAAOA,GAAP,CAAe,UAE1C,CACHI,SACAK,KAAM+B,KAAKC,MAAMhC,GACjBT,UAGR,IAAK,OACD,MAAO,CAACI,UAGZ,QAEI,MAAO,CACHJ,OAFJA,EAAS,CAAC,oB,iBCpEf,SAASiD,EAAeC,GAE3B,IAAM7C,EAAUuC,EAAcM,GAE9B,GAAI7C,EAAQL,QAAoC,IAA1BK,EAAQL,OAAOmD,OAAc,MAAO,CACtD5C,KAAMZ,EACNW,QAASD,EAAQL,QAGrB,OAAQK,EAAQD,QACZ,KAAKb,EACD,MAAO,CACHgB,KAAMhB,EACNe,QAASD,GAGjB,KAAKZ,EACD,MAAO,CACHc,KAAMd,EACNa,QAASD,GAGjB,KAAKb,EACD,OAAO,SAAA4D,GAAQ,OAAIA,GAUA/B,EAVwBhB,EAAQO,SAWpD,SAAAwC,GACHC,IAAMC,IAAI,kCAAmC,CACzCR,OACI,CACI,WAAc,mCACd,KAAQ,MACR,QAAW,iBAGlBS,MAAK,gBAAEhB,EAAF,EAAEA,KAAF,OAAYa,EACd,CACI7C,KAAMf,EACNc,QAAS,CACLe,mBACAC,UAAWiB,WAf5B,IAAwBlB,GATvB,KAAK3B,EACD,MAAO,CACHa,KAAMb,ICyCP8D,mBAZf,SAAyBrD,GACrB,MAAO,CACHH,OAAQG,EAAMN,UAAUG,WAIhC,SAA4BoD,GACxB,MAAO,CACHK,SAAU,SAAAP,GAAK,OAAIE,EAASH,EAAeC,QAIpCM,EA3DI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAUzD,EAAY,EAAZA,OAAY,EAEb0D,mBAAS,IAFI,mBAEhCR,EAFgC,KAEzBS,EAFyB,KAOjCC,EAAS,SAAAC,GAEXA,EAAEC,iBACFL,EAASP,IAIb,OACI,sBAAMa,MAAO,CAACC,MAAO,QAASP,SAAUG,EAAxC,SACI,eAACK,EAAA,EAAD,CAAaC,MAAyB,IAAlBlE,EAAOmD,OACdgB,QAAQ,WACRJ,MAAO,CAACC,MAAO,QAF5B,UAII,cAACI,EAAA,EAAD,CAAYC,QAAQ,qBAApB,qBACA,cAACC,EAAA,EAAD,CACIJ,MAAyB,IAAlBlE,EAAOmD,OACdoB,GAAG,qBACHrB,MAAOA,EACPsB,SArBO,SAAAX,GACnBF,EAASE,EAAEY,OAAOvB,QAqBNwB,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CAAQV,QAAQ,YACRW,MAAM,UACNC,QAASnB,EAFjB,sBAQRoB,WAAY,KAEG,IAAlBhF,EAAOmD,QACR,eAAC8B,EAAA,EAAD,CAAgBV,GAAG,8BAAnB,qBAA0DvE,EAAOgD,KAAK,iB,kCC9CvEkC,EALY,SAACC,GACxB,IAAM1E,EAAO,IAAI+B,KAAK2C,GACtB,MAAM,GAAN,OAAU1E,EAAK2E,cAAf,aAAiC,KAAO3E,EAAK4E,WAAa,IAAIC,OAAO,GAArE,YAA2E7E,EAAK8E,YCgBrEC,EAdM,SAAC,GAAiB,IAAhB3F,EAAe,EAAfA,UAGnB,OACI,sBAAK4F,UAAWC,IAAQF,aAAxB,UAEI,6BAAKN,EAAmBrF,EAAUY,QAClC,6BANuBZ,EAAUA,UAAUkB,KAAI,SAACC,EAAM2E,GAAP,OACnD,uCAAoB3E,EAAKH,MAAzB,YAAkCG,EAAKL,MAAvC,YAAgDK,EAAKJ,WAA5C+E,YCeFnC,mBANf,SAAyBrD,GACrB,MAAO,CACHyF,KAAMzF,EAAMN,UAAUA,aAIf2D,EAhBM,SAAC,GAAY,IAAXoC,EAAU,EAAVA,KAGnB,OACI,oBAAIH,UAAWC,IAAQG,aAAvB,SACKD,GAJgBA,EAAK7E,KAAI,SAACC,EAAM2E,GAAP,OAAiB,6BAAgB,cAAC,EAAD,CAAc9F,UAAWmB,KAAhC2E,W,iBCKjDG,EARD,SAAC,GAAa,IAAZhG,EAAW,EAAXA,MACZ,OACI,qBAAK2F,UAAWC,IAAQI,MAAxB,SACI,gDAAiBhG,QCqBd0D,mBARf,SAAyBrD,GACrB,MAAO,CACHF,aAAcE,EAAMF,aAAaA,aACjCF,cAAeI,EAAMN,UAAUE,cAC/BD,MAAOK,EAAMN,UAAUC,SAIhB0D,EApBH,SAAC,GAA0C,IAAzCvD,EAAwC,EAAxCA,aAAcF,EAA0B,EAA1BA,cAAeD,EAAW,EAAXA,MAEvC,OAEI,sBAAK2F,UAAWC,IAAQK,IAAxB,UACI,cAAC,EAAD,IACC9F,GAAgB,cAAC,EAAD,IAChBF,GAAiB,cAAC,EAAD,CAAOD,MAAOA,UCP5CkG,IAASC,OACL,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACI,cAAC,EAAD,MACSkE,SAASC,eAAe,W","file":"static/js/main.9aee90e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3HxXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShoppingList\":\"ShoppingList_ShoppingList__2gAi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShoppingItem\":\"ShoppingItem_ShoppingItem__3TJ9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Total\":\"Total_Total__1Z7xn\"};","export const ADD = 'add'\r\nexport const TOTAL = 'total'\r\nexport const CLEAR = 'clear'\r\nexport const LIST = 'list'\r\nexport const ERROR = 'error'\r\n","import {ADD, CLEAR, ERROR, TOTAL} from '../actions/actionsTypes'\r\n\r\nconst initialState = {\r\n    purchases: [],\r\n    total: '',\r\n    totalIsActive: false,\r\n    errors: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    const {purchases} = state\r\n    const command = action.payload\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD:\r\n            const newPurchase = {\r\n                date: command.date,\r\n                purchase:\r\n                    {\r\n                        price: command.price,\r\n                        currency: command.currency,\r\n                        title: command.title\r\n                    }\r\n            }\r\n\r\n            const addPurchase = (newPurchase) => {\r\n                if (purchases.map(item => item.date === newPurchase.date).includes(true)) {\r\n                    return addPurchaseAsExisting(newPurchase)\r\n                } else {\r\n                    return addPurchaseAsNew(newPurchase)\r\n                }\r\n            }\r\n\r\n            const addPurchaseAsExisting = ({date, purchase}) => {\r\n                return purchases.map(item =>\r\n                    item.date === date ? {...item, purchases: [...item.purchases, purchase]} : item)\r\n\r\n            }\r\n\r\n            const addPurchaseAsNew = ({date, purchase}) => {\r\n                return [...purchases, {date: date, purchases: [purchase]}]\r\n            }\r\n            return {...state, purchases: addPurchase(newPurchase), errors: []}\r\n\r\n        case CLEAR:\r\n            return {...state, purchases: purchases.filter(item => item.date !== command.date), errors: []}\r\n\r\n        case TOTAL:\r\n            const {selectedCurrency, fixerData} = action.payload\r\n\r\n            const permTotalObj = {\r\n                PLN: 0,\r\n                USD: 0,\r\n                EUR: 0\r\n            }\r\n\r\n            purchases.map(({purchases}) => purchases.map(purchase => permTotalObj[purchase.currency] += +purchase.price))\r\n\r\n            let sum = 0\r\n            const rates = fixerData.rates\r\n\r\n            for (let key in rates) {\r\n                sum += rates[selectedCurrency] / rates[key] * permTotalObj[key]\r\n            }\r\n\r\n            return {...state, total: `${Math.ceil(sum * 100) / 100} ${selectedCurrency}`, totalIsActive: true, errors: []}\r\n\r\n        case ERROR:\r\n            return {...state, errors: [...action.payload],}\r\n        default:\r\n            return {...state, totalIsActive: false}\r\n    }\r\n}","import {LIST} from '../actions/actionsTypes'\r\n\r\nconst initialState = {\r\n    listIsActive: true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIST:\r\n            return {...state, listIsActive: !state.listIsActive}\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport purchases from './purchases'\r\nimport listIsActive from './listIsActive'\r\n\r\nexport default combineReducers({\r\n    purchases,\r\n    listIsActive\r\n})","import {applyMiddleware, createStore} from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst store = createStore(reducers, applyMiddleware(ReduxThunk))\r\nwindow.store = store\r\n\r\nexport default store","const validateForDate = (data) => {\r\n    if (!Date.parse(data)) return false\r\n    const regexp = /\\b\\d{4}-\\d{2}-\\d{2}\\b/\r\n    return regexp.test(data)\r\n}\r\n\r\nconst validateForPrice = (data) => {\r\n    const regexp = /\\d+\\.?\\d*/\r\n    return regexp.test(data)\r\n}\r\n\r\nconst validateForCurrency = (data) => {\r\n    const regexp = /[A-Z]{3}/\r\n    return regexp.test(data)\r\n}\r\n\r\nconst validateForTitle = (data) => {\r\n    const regexp = /([A-z]+\\s?)+/\r\n    return regexp.test(data)\r\n}\r\n\r\nconst commandParser = (command) => {\r\n    let errors = []\r\n\r\n    const [action, ...params] = command.split(' ')\r\n\r\n    switch (action) {\r\n\r\n        case 'add': {\r\n            const [date, price, currency, ...title] = params\r\n\r\n            if (!validateForDate(date)) errors = [...errors, 'date']\r\n            if (!validateForPrice(price)) errors = [...errors, 'price']\r\n            if (!validateForCurrency(currency)) errors = [...errors, 'currency']\r\n            if (!validateForTitle(title.join(' '))) errors = [...errors, 'title']\r\n\r\n            return {\r\n                action,\r\n                date: Date.parse(date),\r\n                price,\r\n                currency,\r\n                title: title.join(' '),\r\n                errors\r\n            }\r\n        }\r\n        case 'total': {\r\n            const [currency] = params\r\n\r\n            if (!validateForCurrency(currency)) errors = [...errors, 'currency']\r\n\r\n            return {\r\n                action,\r\n                currency,\r\n                errors\r\n            }\r\n        }\r\n        case 'clear': {\r\n            const [date] = params\r\n\r\n            if (!validateForDate(date)) errors = [...errors, 'date']\r\n\r\n            return {\r\n                action,\r\n                date: Date.parse(date),\r\n                errors\r\n            }\r\n        }\r\n        case 'list': {\r\n            return {action}\r\n        }\r\n\r\n        default:\r\n            errors = ['wrong command']\r\n            return {\r\n                errors\r\n            }\r\n    }\r\n}\r\n\r\nexport default commandParser","import commandParser from '../helpers/comandParser'\r\nimport {ADD, LIST, TOTAL, CLEAR, ERROR} from './actionsTypes'\r\nimport axios from 'axios'\r\n\r\nexport function commandHandler(value) {\r\n\r\n    const command = commandParser(value)\r\n\r\n    if (command.errors && command.errors.length !== 0) return {\r\n        type: ERROR,\r\n        payload: command.errors\r\n    }\r\n\r\n    switch (command.action) {\r\n        case ADD:\r\n            return {\r\n                type: ADD,\r\n                payload: command\r\n            }\r\n\r\n        case CLEAR:\r\n            return {\r\n                type: CLEAR,\r\n                payload: command\r\n            }\r\n\r\n        case TOTAL:\r\n            return dispatch => dispatch(fetchFromFixer(command.currency))\r\n        case LIST:\r\n            return {\r\n                type: LIST,\r\n            }\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\nexport function fetchFromFixer(selectedCurrency) {\r\n    return dispatch => {\r\n        axios.get('http://data.fixer.io/api/latest', {\r\n            params:\r\n                {\r\n                    'access_key': 'a0a7bd9637b9a7b7a4e3b7914007b073',\r\n                    'base': 'EUR',\r\n                    'symbols': 'PLN,USD,EUR'\r\n                }\r\n        })\r\n            .then(({data}) => dispatch(\r\n                {\r\n                    type: TOTAL,\r\n                    payload: {\r\n                        selectedCurrency,\r\n                        fixerData: data\r\n                    }\r\n                })\r\n            )\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    FormControl,\r\n    Button,\r\n    OutlinedInput,\r\n    InputLabel,\r\n    InputAdornment,\r\n    FormHelperText\r\n} from '@material-ui/core'\r\nimport {commandHandler} from '../../actions'\r\n\r\nconst CommandBar = ({onSubmit, errors}) => {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const onChangeHandle = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    const submit = e => {\r\n\r\n        e.preventDefault()\r\n        onSubmit(value)\r\n\r\n    }\r\n\r\n    return (\r\n        <form style={{width: '100%'}} onSubmit={submit}>\r\n            <FormControl error={errors.length !== 0}\r\n                         variant=\"outlined\"\r\n                         style={{width: '100%'}}\r\n            >\r\n                <InputLabel htmlFor=\"outlined-adornment\">Command</InputLabel>\r\n                <OutlinedInput\r\n                    error={errors.length !== 0}\r\n                    id=\"outlined-adornment\"\r\n                    value={value}\r\n                    onChange={onChangeHandle}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <Button variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submit}\r\n                            >\r\n                                submit\r\n                            </Button>\r\n                        </InputAdornment>\r\n                    }\r\n                    labelWidth={75}\r\n                />\r\n                {errors.length !== 0 &&\r\n                <FormHelperText id=\"outlined-weight-helper-text\">Errors: {errors.join(', ')}</FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\nCommandBar.propTypes = {}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        errors: state.purchases.errors\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSubmit: value => dispatch(commandHandler(value)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandBar)","const parseAndFormatDate = (dateData) => {\r\n    const date = new Date(dateData)\r\n    return `${date.getFullYear()}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${date.getDate()}`\r\n}\r\n\r\nexport default parseAndFormatDate","import React from 'react'\r\nimport classes from './ShoppingItem.module.css'\r\nimport parseAndFormatDate from '../../helpers/parseAndFormatDate'\r\n\r\nconst ShoppingItem = ({purchases}) => {\r\n    const createPushesList = () => purchases.purchases.map((item, index) =>\r\n        <li key={index}>{`${item.title} ${item.price} ${item.currency}`}</li>)\r\n    return (\r\n        <div className={classes.ShoppingItem}>\r\n\r\n            <h3>{parseAndFormatDate(purchases.date)}</h3>\r\n            <ul>\r\n                {createPushesList()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingItem","import React from 'react'\r\nimport classes from './ShoppingList.module.css'\r\nimport {connect} from 'react-redux'\r\nimport ShoppingItem from '../ShoppingItem/ShoppingItem'\r\n\r\nconst ShoppingList = ({list}) => {\r\n    const createList = () => list.map((item, index) => <li key={index}><ShoppingItem purchases={item}/></li>)\r\n\r\n    return (\r\n        <ul className={classes.ShoppingList}>\r\n            {list && createList()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        list: state.purchases.purchases\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShoppingList)","import React from 'react'\r\nimport classes from './Total.module.css'\r\n\r\nconst Total = ({total}) => {\r\n    return (\r\n        <div className={classes.Total}>\r\n            <span>{`Total: ${total}`}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Total","import React from 'react'\nimport {connect} from 'react-redux'\nimport classes from './App.module.css'\nimport CommandBar from './components/CommandBar/CommandBar'\nimport ShoppingList from './components/ShoppingList/ShoppingList'\nimport Total from './components/Total/Total'\n\nconst App = ({listIsActive, totalIsActive, total}) => {\n\n    return (\n\n        <div className={classes.App}>\n            <CommandBar/>\n            {listIsActive && <ShoppingList/>}\n            {totalIsActive && <Total total={total}/>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        listIsActive: state.listIsActive.listIsActive,\n        totalIsActive: state.purchases.totalIsActive,\n        total: state.purchases.total\n    }\n}\n\nexport default connect(mapStateToProps)(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n)"],"sourceRoot":""}